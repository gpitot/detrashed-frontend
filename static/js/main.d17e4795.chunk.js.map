{"version":3,"sources":["api/BaseRequest.js","api/backend-api/index.js","common/pages/LoginCallback/LoginCallbackPage.js","common/pages/Home/event-info.js","common/pages/Home/map.js","common/pages/Authenticate/GreetingPagePresenter.js","common/pages/Authenticate/index.js","api/meetup-api/index.js","common/pages/Interactions/create-event.js","common/pages/Home/index.js","common/pages/Test/child.js","common/pages/Test/child-two.js","common/pages/Test/parent.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["BaseRequest","urlString","headers","Accept","Content-Type","console","log","fetch","method","data","get","includes","json","text","_context","t0","err","body","JSON","stringify","_context2","ENDPOINT","BackendApi","Object","classCallCheck","this","createClass","key","value","_sendLoginRequest","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","prev","next","abrupt","sendGetRequest","concat","stop","apply","arguments","_getTokens","_callee2","code","sendPostRequest","_x","LoginCallbackPage","URLSearchParams","window","location","search","getTokens","access_token","setLocalSession","localStorage","getItem","process","setItem","refresh_token","expiry","Date","getTime","expires_in","React","Component","Event","styled","div","_templateObject","Name","_templateObject2","Desc","_templateObject3","Dates","_templateObject4","EventInfo","props","event","react_default","createElement","href","url","name","description","Mappable","state","lat","lng","zoom","handleClick","e","position","Map","center","style","height","zIndex","onClick","TileLayer","attribution","events","map","venue","eventpos","address","latitude","longitude","Marker","id","Popup","event_info","GreetingPagePresenter","sendLoginRequest","then","response","catch","GreetingPage","auth","token","setState","Blackout","Button","linkButtonClicked","Authenticate_templateObject","button","Authenticate_templateObject2","MeetupApi","Authorization","getHeaders","startdate","moment","utc","format","summary","start_time","CreateEvent","_this","possibleConstructorReturn","getPrototypeOf","call","handleChange","defineProperty","target","toggleEvent","createOpen","selecting","confirming","getStartDate","error_message","Create","bind","assertThisInitialized","d","year","getUTCFullYear","month","fullDate","getUTCMonth","day","getUTCDate","prevProps","mapClicked","selectLocation","length","latlng","createEvent","res","undefined","addEvent","_this2","setTimeout","Closed","eventX","eventY","display","originalEvent","offsetX","offsetY","Fragment","CreateArea","CloseBtn","Error","Input","type","onChange","placeholder","Summary","Calender","defaultValue","create_event_Event","left","top","Confirm","src","create_event_templateObject","create_event_templateObject2","input","create_event_templateObject3","create_event_templateObject4","_templateObject5","img","_templateObject6","_templateObject7","textarea","_templateObject8","_templateObject9","Home","toConsumableArray","push","getEvents","removeItem","LoginCallback_LoginCallbackPage","Area","create_event","Authenticate","Home_templateObject","Child","count","ChildTwo","Parent","child","child_two","Router","Switch","Route","exact","path","component","Test","App","Boolean","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d17e4795.chunk.js","sourcesContent":["\nclass BaseRequest {\n    static async sendGetRequest(urlString, headers = null) {\n        if (headers === null) {\n            headers = {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json',\n            };\n        }\n        console.log(headers);\n        try {\n            const data = await fetch(urlString, {\n                method: 'get',\n                headers,\n            });\n            const responseType = data.headers.get('content-type');\n            if (responseType.includes('application/json')) {\n                const json = await data.json();\n                return json;\n            }\n\n            return data.text();\n        } catch (err) {\n            console.log(err);\n            return { err };\n        }\n    }\n\n\n    static async sendPostRequest(urlString, body, headers=null) {\n        if (headers === null) {\n            headers =  {\n                'Content-Type': 'application/json',\n            }\n        }\n        \n        try {\n            const data = await fetch(urlString, {\n                method: 'post',\n                headers: headers,\n                body: JSON.stringify(body),\n            });\n\n            const json = await data.json();\n            return json;\n        } catch (err) {\n            return { err };\n        }\n    }\n}\n\nexport { BaseRequest };\n","import { BaseRequest } from '../BaseRequest';\n\nconst ENDPOINT = 'https://detrashed-backend.herokuapp.com';\n\nexport class BackendApi {\n    static async sendLoginRequest() {\n        return BaseRequest.sendGetRequest(`${ENDPOINT}/user/login/`);\n    }\n\n\n    static async getTokens(code) {\n        const body = {\n            code,\n        };\n        return BaseRequest.sendPostRequest(`${ENDPOINT}/user/access/`, body);\n    }\n}\n","import React from 'react';\n\nimport { BackendApi } from '../../../api/backend-api';\n\nclass LoginCallbackPage extends React.Component {\n    componentDidMount() {\n        console.log('hello');\n\n        const params = new URLSearchParams(window.location.search);\n\n\n        const code = params.get('code');\n\n        if (code) {\n            this.getTokens(code);\n        }\n\n        \n    }\n\n    async getTokens(code) {\n        console.log(code);\n        const data = await BackendApi.getTokens(code);\n        /* handle error here */\n        console.log(data);\n        if (data.access_token) {\n            this.setLocalSession(data);\n        } else if (localStorage.getItem('access_token') && localStorage.getItem('refresh_token')) {\n            window.location = `${process.env.PUBLIC_URL}/`;\n        } else {\n        // TODO: Display error somewhere\n            window.location = `${process.env.PUBLIC_URL}/error`;\n        }\n    }\n\n    setLocalSession(data) {\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token);\n        /* later consider adding epoch time of expiry so we can refresh before making a request */\n        const expiry = new Date().getTime() + data.expires_in * 1000;\n        localStorage.setItem('expiry_epoch', expiry);\n        window.location = `${process.env.PUBLIC_URL}/`;\n    }\n\n    render() {\n        return 'Loading...';\n    }\n}\n\nexport default LoginCallbackPage;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst EventInfo = (props) => {\n    const {event} = props;\n    return (\n        <Event>\n            <Name href={event.url}>{event.name.text}</Name>\n            <Desc>{event.description.text}</Desc>\n            <Dates>\n                \n            </Dates>\n        </Event>\n    )\n}\n\nconst Event = styled.div`\n    display:flex;\n    flex-direction:column;\n    padding:25px;\n    overflow: hidden;\n`;\n\nconst Name = styled.a`\n    text-align:center;\n    color:black;\n`;\n\nconst Desc = styled.div`\n    max-width: 100%;\n\n\n`;\n\nconst Dates = styled.div``;\n\n\nexport default EventInfo;","import React, {Component} from 'react';\nimport {Map, TileLayer,  Marker, Popup } from 'react-leaflet';\n\nimport EventInfo from './event-info';\n\nclass Mappable extends Component {\n\n    state = {\n        lat: 51.505,\n        lng: -0.09,\n        zoom: 4,\n    };\n\n    handleClick = (e) => {\n        console.log('clicked map', e);\n        //send handle click to parent\n        //then to create event\n        //if selecting location is true then create confirm message at spot\n        //if confirmed then set location \n    }\n\n    \n\n    render() {\n        const position = [this.state.lat, this.state.lng];\n        return (\n            <Map \n                center={position} \n                zoom={this.state.zoom} \n                style={{height:'100vh', zIndex:1}}\n\n                onClick={this.props.handleClick}\n            >\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                />\n                {\n                    this.props.events.map((event) => {\n                        if (event.venue === null) return null;\n                        const eventpos = [event.venue.address.latitude, event.venue.address.longitude];\n                        return (\n                            <Marker position={eventpos} key={event.id}>\n                                <Popup>\n                                    <EventInfo event={event} />\n                                </Popup>\n                            </Marker>\n                        )\n                    })\n                }\n            </Map>    \n        )\n    }\n}\n\nexport default Mappable;","import { BackendApi } from '../../../api/backend-api';\n\nexport class GreetingPagePresenter {\n    static linkButtonClicked() {\n        BackendApi.sendLoginRequest()\n            .then((response) => {\n                window.location = response;\n            })\n            .catch(console.log);\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\n\n// TODO: Add font used in UI desgin\nimport {GreetingPagePresenter} from './GreetingPagePresenter';\n\n\nclass GreetingPage extends React.Component {\n\n\n    state = {\n        auth: false,\n        token : ''\n    }\n    componentDidMount() {\n        // check current localstorage and see if tokens have expired, if not redirect to discover\n        if (localStorage.getItem('access_token')) {\n            \n            this.setState({auth:true, token: localStorage.getItem('access_token')})\n            \n        }\n    }\n\n\n    render() {\n        if (this.state.auth) return null;\n        return (\n            <Blackout>\n               <Button onClick={GreetingPagePresenter.linkButtonClicked}>Log in with Eventbrite to view events</Button>\n            </Blackout>\n        );\n    }\n}\nconst Blackout = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.6);\n    z-index:2;\n`;\n\n\nconst Button = styled.button`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%, -50%);\n    z-index:5;\n    padding:20px;\n    background:#eee;\n    border:solid 1px #2f2f2f;\n    color:#2f2f2f;\n    border-radius:4px;\n    font-size:24px;\n    cursor:pointer;\n    &:hover {\n        background:#2f2f2f;\n        color:#eee;\n    }\n`;\n\nexport default GreetingPage;\n","import moment from 'moment';\nimport { BaseRequest } from '../BaseRequest';\n\nconst ENDPOINT = 'https://detrashed-backend.herokuapp.com';\n\n\nclass MeetupApi {\n    static getHeaders() {\n        const access_token = localStorage.getItem('access_token');\n        return {\n            \"Authorization\": `Bearer ${access_token}`,\n            'Content-Type' : 'application/json'\n        };\n    }\n\n    static async getEvents() {\n        const headers = this.getHeaders();\n        const url = `${ENDPOINT}/events/get`;\n        return BaseRequest.sendGetRequest(url, headers);\n    }\n\n   \n    static async createEvent(location, startdate) {\n        \n        startdate = moment(startdate);\n        startdate = moment.utc(startdate);\n        \n        startdate = startdate.format()\n        \n        const headers = this.getHeaders();\n        const url = `${ENDPOINT}/events/create`;\n        const body = {\n            location : {\n                address : {\n                    longitude : location.lng,\n                    latitude : location.lat\n                },\n                name : location.name,\n                summary : location.summary\n            },\n            start_time : startdate\n        }\n        return BaseRequest.sendPostRequest(url, body, headers);\n    }\n}\n\nexport { MeetupApi };\n","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {MeetupApi} from '../../../api/meetup-api'\n\n\n\nclass CreateEvent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        \n        const startdate = this.getStartDate();\n\n        this.state = {\n            createOpen:false,\n            selecting : false,\n            confirming:false,\n\n            name : '',\n            summary : '',\n            startdate : startdate,\n            error_message : ''\n        }\n        this.Create = this.Create.bind(this);\n    }\n\n    getStartDate() {\n\n        const d = new Date();\n        const year = d.getUTCFullYear();\n        const month = fullDate(d.getUTCMonth());\n        const day = fullDate(d.getUTCDate());\n\n        return `${year}-${month}-${day}T09:00`;\n\n        function fullDate(d) {\n            if (d < 10) {\n                return `0${d}`;\n            }\n            return d;\n        }\n    }\n    \n\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.mapClicked === this.props.mapClicked) return;\n\n        if (this.state.selecting) {\n            this.selectLocation();\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    }\n\n    async Create() {\n\n        if (this.state.name.length < 1) {\n            this.setState({error_message : \"Please enter a name for the event\"});\n            return;\n        }\n\n        if (this.state.summary.length < 1) {\n            this.setState({error_message : \"Please enter a summary for the event\"});\n            return;\n        }\n\n        let location = this.props.mapClicked.latlng;\n        location.name = this.state.name;\n        location.summary = this.state.summary;\n        \n        const startdate = this.state.startdate;\n        const res = await MeetupApi.createEvent(location, startdate);\n        console.log(res);\n        if (res.err !== undefined) {\n            this.setState({error_message:res.err});\n            return\n        }\n        try {\n            const event = res.event;\n            event.venue = res.venue;\n            this.props.addEvent(event);\n            this.setState({\n                createOpen:false,\n                selecting : false,\n                confirming : false\n            })\n        } catch(err) {\n            console.log(err);\n        }\n        \n    }\n\n    toggleEvent = () => {\n        this.setState({createOpen : !this.state.createOpen, selecting : !this.state.selecting, confirming:false})\n    }\n\n\n    selectLocation() {\n        this.setState({confirming:false})\n        setTimeout(()=>{\n            this.setState({confirming:true})\n        }, 500);\n    }\n\n    render() {\n        if (!this.state.createOpen) {\n            return <Closed onClick={this.toggleEvent}>Create Event</Closed>\n        }\n\n        let eventX = 0;\n        let eventY = 0;\n        let display = 'none';\n        if (this.props.mapClicked && this.state.selecting) {\n            eventX = this.props.mapClicked.originalEvent.offsetX - 25;\n            eventY = this.props.mapClicked.originalEvent.offsetY - 25;\n            display = 'block';\n\n        }\n\n        return (\n            <React.Fragment>\n                <CreateArea>\n                    <CloseBtn onClick={this.toggleEvent}/>\n                    <h3>Select a location on the map</h3>\n                    <Error>{this.state.error_message}</Error>\n                    <Input \n                        type = 'text' \n                        name = 'name' \n                        onChange={this.handleChange} \n                        value={this.state.name} \n                        placeholder=\"Event name\"    \n                    />\n\n                    <Summary \n                        name = 'summary' \n                        onChange={this.handleChange} \n                        value={this.state.summary} \n                        placeholder = \"Event description... consider adding your email or phone number so that interested members can contact you for further details\"\n                    />\n\n                    <Calender type=\"datetime-local\"\n                        name=\"startdate\"\n                        defaultValue={this.state.startdate}\n                        onChange={this.handleChange}\n                    />\n\n                </CreateArea>\n\n                <Event style={{left:`${eventX}px`, top: `${eventY}px`, display}}>\n                    {\n                        this.state.confirming &&\n                        <Confirm \n                            onClick = {this.Create}\n                            src={'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Light_green_check.svg/480px-Light_green_check.svg.png'}/>\n                    }\n                </Event>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nconst Closed = styled.div`\n    position:absolute;\n    top:50px;\n    left:150px;\n    z-index:4;\n    padding:15px;\n    color: #3e603e;\n    background: #eee;\n    font-size:20px;\n    border:solid 2px #3e603e;\n    border-radius:5px;\n    cursor:pointer;\n\n    @media (max-width:500px) {\n        bottom:0;\n        width:100%;\n        left:0;\n        top:auto;\n        text-align:center;\n    }\n`;\n\n\nconst CreateArea = styled(Closed)`\n\n    width:300px;\n\n`;\n\nconst Calender = styled.input`\n    width:100%;\n`;\n\nconst CloseBtn = styled.div`\n    position:absolute;\n    top:-16px;\n    right:-16px;\n    height:32px;\n    width:32px;\n    background:red;\n    border-radius:50%;\n    border:solid 1px black;\n    color:white;\n    text-align:center;\n    line-height:32px;\n\n    &:after {\n        content: 'X';\n    }\n\n`;\n\n\nconst Event = styled.div`\n    position:absolute;\n    width:50px;\n    height:50px;\n    border-radius:50%;\n    background:#eee;\n    border:solid 2px #3e603e;\n    z-index:5;\n    cursor:pointer;\n\n    &:hover {\n        background:#efe;\n    }\n`;\n\nconst Confirm = styled.img`\n    position:absolute;\n    top:50%;\n    left:50%;\n    width:60%;\n    transform:translate(-50%, -50%);\n    display:block;\n`;\n\n\nconst Input = styled.input`\n    width:100%;\n`\nconst Summary = styled.textarea``;\n\nconst Error = styled.div`\n    color:red;\n`;\n\n\nexport default CreateEvent;","\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\n\nimport './core.css';\n\nimport Mappable from './map';\nimport Authenticate from '../Authenticate';\n\nimport CreateEvent from '../Interactions/create-event.js';\nimport {MeetupApi} from '../../../api/meetup-api'\nimport LoginCallbackPage from '../LoginCallback/LoginCallbackPage'\n\n\nclass Home extends Component {\n\n    state = {\n       events : [],\n       mapClicked : null,\n    }\n\n    componentDidMount() {\n        this.getEvents();\n    }\n\n    async getEvents() {\n        const data = await MeetupApi.getEvents();\n        const events = await data.events;\n        if (events) {\n            console.log(events);\n            this.setState({events})\n        } else {\n            console.log(\"NO EVENTS\")\n            localStorage.removeItem('access_token')\n        }\n    }\n\n    addEvent =(event)=>{\n        const events = [...this.state.events];\n        events.push(event);\n        this.setState({events})\n    }\n\n    handleClick = (e) => {\n        console.log(e);\n        this.setState({mapClicked : e})\n    }\n\n    render() {\n        \n        const code = new URLSearchParams(window.location.search).get('code');\n        if (code) {\n            return <LoginCallbackPage />\n        }\n\n\n        return (\n            <Area>\n                <Mappable events={this.state.events} handleClick={this.handleClick} />\n                <CreateEvent \n                    mapClicked={this.state.mapClicked} \n                    addEvent = {this.addEvent}\n                />\n                \n                <Authenticate />\n            </Area>\n        )\n    }\n}\n\nconst Area = styled.div``;\n\n\n\n\n\nexport default Home;","\n\nimport React from 'react';\n\n\nconst Child = (props) => {\n    return <div>{props.count}</div>\n}\n\nexport default Child;","\n\nimport React from 'react';\n\nconst ChildTwo = (props) => {\n    console.log('render child two');\n    return (<h3>Hello</h3>)\n}\n\nexport default ChildTwo;","\n\n\nimport React from 'react';\nimport Child from './child';\nimport ChildTwo from './child-two';\n\nclass Parent extends React.Component {\n    state = {\n        count : 0\n    }\n\n    handleClick = () => {\n        this.setState({count : this.state.count + 1});\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick = {this.handleClick}>Click</button>\n                <Child count={this.state.count}/>\n                <ChildTwo />\n            </div>\n        )\n    }\n}\n\n\nexport default Parent;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n\nimport LoginCallbackPage from './common/pages/LoginCallback/LoginCallbackPage';\nimport Home from './common/pages/Home'\n\nimport Test from './common/pages/Test/parent';\n\nexport default function Router(props) {\n    console.log(process.env.PUBLIC_URL)\n    return (\n        <Switch>\n\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Home} />\n            <Route path={process.env.PUBLIC_URL + \"/callback\"} component={LoginCallbackPage} />\n            \n\n            <Route path = {process.env.PUBLIC_URL + \"/test\"} component = {Test} />\n\n        </Switch>\n    );\n}\n","import React, { Component } from 'react';\n\n\nimport Router from './Router';\n\n\n\n\nclass App extends Component {\n    \n\n   \n\n\n    render() {\n        return (\n            <React.Fragment>\n                \n\n                <Router props={this.props} />\n\n            </React.Fragment>\n\n\n        );\n    }\n}\nexport default App;","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}